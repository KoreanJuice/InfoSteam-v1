{"version":3,"sources":["./src/app/shared/modules/material.ts","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/shared/services/steam-news.service.ts","./src/app/shared/abstract-services/abstract-steam-news-service.ts","./src/app/pages/news/news.component.ts","./src/app/pages/news/news.component.html","./src/app/components/recommended-games/recommended-games.component.ts","./src/app/components/recommended-games/recommended-games.component.html","./src/environments/environment.ts","./src/app/pages/page-not-found/page-not-found.component.ts","./src/app/pages/page-not-found/page-not-found.component.html","./src/app/shared/pipes/safe-html.pipe.ts","./src/app/components/game-news/game-news.component.ts","./src/app/components/game-news/game-news.component.html","./src/app/components/recent-games/recent-games.component.ts","./src/app/components/recent-games/recent-games.component.html","./src/app/shared/helpers/user-reg-exp.ts","./src/app/shared/helpers/get-user-data.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/abstract-services/abstract-player-service.ts","./src/app/components/game-search/game-search.component.ts","./src/app/components/game-search/game-search.component.html","./src/app/pages/game-detail/game-detail.component.ts","./src/app/pages/game-detail/game-detail.component.html","./src/app/shared/services/steam-apps.service.ts","./src/app/shared/abstract-services/abstract-steam-user-stats-service.ts","./src/app/app.module.ts","./src/key.ts","./src/app/shared/pipes/short-decimals.pipe.ts","./src/app/shared/services/player.service.ts","./src/app/components/user-search/user-search.component.ts","./src/app/components/user-search/user-search.component.html","./src/app/shared/services/steam-user-stats.service.ts","./src/app/pages/help/help.component.ts","./src/app/pages/help/help.component.html","./src/app/shared/pipes/show-utc-time.pipe.ts","./src/app/shared/services/steam-user.service.ts","./src/app/shared/helpers/header-img-url.ts","./src/app/shared/helpers/get-game-data.ts","./src/app/app-routing.module.ts","./src/app/pages/user-detail/user-detail.component.ts","./src/app/pages/user-detail/user-detail.component.html","./src/app/shared/abstract-services/abstract-steam-apps-service.ts","./src/app/shared/abstract-services/abstract-steam-user-service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\nexport const material = [\r\n  MatExpansionModule,\r\n  MatFormFieldModule,\r\n  MatSelectModule,\r\n  MatToolbarModule,\r\n  MatSidenavModule,\r\n  MatButtonModule,\r\n  MatListModule,\r\n  MatInputModule,\r\n  MatDividerModule,\r\n  MatCardModule,\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SteamUserService } from '../../shared/services/steam-user.service';\r\nimport { notIdUserRegExp } from '../../shared/helpers/user-reg-exp';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  private appid: number;\r\n  private steamid: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private steamUser: SteamUserService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  gameSearch(event: string): void {\r\n    this.appid = parseInt(event, 10);\r\n    this.router.navigate([`/game/${this.appid}`]);\r\n  }\r\n\r\n  async userSearch(event: string): Promise<any> {\r\n    if (notIdUserRegExp(event)) {\r\n      const { response } = await this.steamUser.resolveVanityURL(event);\r\n\r\n      if (response.success === 1) {\r\n        this.steamid = response.steamid;\r\n      } else {\r\n        // TODO: consider send params to \"page not found\" to show error\r\n        this.router.navigate([`User_Not_Found`]);\r\n      }\r\n    }\r\n\r\n    this.router.navigate([`/user/${this.steamid}`]);\r\n  }\r\n\r\n}\r\n","<div class=\"page-container\">\r\n    <h1>Welcome to InfoSteam!</h1>\r\n    <img src=\"../../../assets/Icon-InfoSteam.png\" alt=\"InfoSteam icon\">\r\n    <app-game-search (gameSearch)=\"gameSearch($event)\"></app-game-search>\r\n    <app-user-search (userSearch)=\"userSearch($event)\"></app-user-search>\r\n    <app-recommended-games></app-recommended-games>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport * as config from '../../../config.json';\r\nimport { AbstractSteamNewsService } from '../abstract-services/abstract-steam-news-service';\r\nimport { GetNewsForApp } from '../interfaces/steam-news/get-news-for-app';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SteamNewsService extends AbstractSteamNewsService {\r\n\r\n  private readonly INTERFACE = 'ISteamNews';\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n    super();\r\n  }\r\n  /**\r\n   * Get the news for the specified app.\r\n   * @param appid AppID to retrieve news for\r\n   * @param maxlength Max length for the content to return, if this is 0 the full content is returned, if it's less then a blurb is generated to fit.\r\n   * @param count number of posts to retrieve (default 20)\r\n   * @param enddate Retrieve posts earlier than this date (unix epoch timestamp)\r\n   * @param feeds Comma-seperated list of feed names to return news for\r\n   */\r\n  getNewsForApp(appid: number, maxlength: number = 0, count: number = 1, enddate?: number, feeds?: string): Promise<GetNewsForApp> {\r\n    let urlParams = '';\r\n    if (maxlength) { urlParams += `&maxlength=${maxlength}`; }\r\n    if (count) { urlParams += `&count=${count}`; }\r\n    if (enddate) { urlParams += `&enddate=${enddate}`; }\r\n    if (feeds) { urlParams += `&feeds=${feeds}`; }\r\n\r\n    return this.http\r\n      .get<GetNewsForApp>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetNewsForApp/v2/?appid=${appid}${urlParams}`)\r\n      .toPromise();\r\n  }\r\n\r\n}\r\n","import { GetNewsForApp } from '../interfaces/steam-news/get-news-for-app';\r\n\r\nexport abstract class AbstractSteamNewsService {\r\n\r\n  abstract getNewsForApp(appid: number, maxlength?: number, enddate?: number, count?: number, feeds?: string): Promise<GetNewsForApp>;\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { SteamAppsService } from '../../shared/services/steam-apps.service';\r\n\r\n@Component({\r\n  selector: 'app-news',\r\n  templateUrl: './news.component.html',\r\n  styleUrls: ['./news.component.scss']\r\n})\r\nexport class NewsComponent implements OnInit {\r\n\r\n  public nNews: number;\r\n  public appid: number;\r\n  public gameName: string;\r\n\r\n  constructor(\r\n    private steamApps: SteamAppsService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.nNews = 5;\r\n  }\r\n\r\n  gameSearch(event: string): void {\r\n    this.appid = parseInt(event, 10);\r\n    this.getNameApp();\r\n  }\r\n\r\n  private async getNameApp(): Promise<void> {\r\n    const { applist: { apps } } = await this.steamApps.getAppList();\r\n\r\n    const { name } = apps.find((app) => app.appid === this.appid);\r\n\r\n    this.gameName = name;\r\n  }\r\n\r\n}\r\n","<div class=\"page-container\">\r\n    <app-game-search (gameSearch)=\"gameSearch($event)\"></app-game-search>\r\n    <h2 *ngIf=\"gameName\">{{gameName | uppercase}}</h2>\r\n    <app-game-news [appid]=\"appid\" [nNews]=\"nNews\"></app-game-news>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { SteamAppsService } from '../../shared/services/steam-apps.service';\r\nimport { SteamUserStatsService } from '../../shared/services/steam-user-stats.service';\r\nimport { getGameData } from '../../shared/helpers/get-game-data';\r\nimport { GameData } from '../../shared/interfaces/data/game-data';\r\n\r\n@Component({\r\n  selector: 'app-recommended-games',\r\n  templateUrl: './recommended-games.component.html',\r\n  styleUrls: ['./recommended-games.component.scss']\r\n})\r\nexport class RecommendedGamesComponent implements OnInit {\r\n\r\n  private recommendedGames: number[] = [524220, 237930, 312750, 987720];\r\n  public games: GameData[] = [];\r\n\r\n  constructor(\r\n    private steamUserStats: SteamUserStatsService,\r\n    private steamApps: SteamAppsService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getGamesData();\r\n  }\r\n\r\n  private async getGamesData(): Promise<void> {\r\n    for (const game of this.recommendedGames) {\r\n      const gameData = await getGameData(game, this.steamUserStats, this.steamApps);\r\n      this.games.push(gameData);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"component-container\">\r\n    <div *ngIf=\"games.length > 0; else gameEmpty\">\r\n        <mat-card *ngFor=\"let gameData of games\" class=\"game-card\">\r\n            <mat-card-content class=\"card-content\">\r\n                <div class=\"data\">\r\n                    <div class=\"game-image\">\r\n                        <img *ngIf=\"gameData.gameImage; else imageEmpty\" class=\"header-img\" src=\"{{gameData.gameImage}}\"\r\n                            alt=\"{{gameData.gameName}} image\" title=\"{{gameData.gameName}}\">\r\n                        <ng-template #imageEmpty>\r\n                            <img class=\"header-img\" src=\"../../../assets/image-not-found.jpg\" alt=\"image not found\"\r\n                                title=\"image not found\">\r\n                        </ng-template>\r\n                    </div>\r\n\r\n                    <div class=\"game-desc\">\r\n                        <div class=\"desc-link\">\r\n                            <a href=\"https://store.steampowered.com/app/{{gameData.appid}}\" target=\"_blank\"\r\n                                class=\"link infoColor\">\r\n                                {{gameData.gameName}}\r\n                                <i class=\"fas fa-external-link-alt infoColor\"></i>\r\n                            </a>\r\n                            <a [routerLink]=\"['/game/', gameData.appid]\" class=\"innerLink link infoColor\">\r\n                                InfoSteam page\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"desc-players successColor\" title=\"Online users playing the game\">\r\n                            {{gameData.player_count}}\r\n                            <i class=\"fas fa-users successColor\"></i>\r\n                        </div>\r\n                        <div *ngIf=\"gameData.game.availableGameStats\" class=\"desc-achievements perfectColor\"\r\n                            title=\"Total game achievements\">\r\n                            {{gameData.game.availableGameStats.achievements.length}}\r\n                            <i class=\"fas fa-trophy perfectColor\"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngIf=\"gameData.game.availableGameStats\" class=\"achievements\">\r\n                    <img *ngFor=\"let achievement of gameData.game.availableGameStats.achievements\"\r\n                        src=\"{{achievement.icon}}\" alt=\"{{achievement.displayName}}\"\r\n                        title=\"{{achievement.displayName}}\">\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <ng-template #gameEmpty>\r\n        <mat-card class=\"game-empty game-card\">\r\n            <p>We could not fetch any game right now.</p>\r\n        </mat-card>\r\n    </ng-template>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.scss']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"page-container\">\r\n    <h1 class=\"error\">ERROR 404!</h1>\r\n    <h2>Page not found.</h2>\r\n    <div [routerLink]=\"['']\" class=\"btnBack\">\r\n        Back to home page! <span>o((>ω< ))o</span>\r\n    </div>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safeHtml'\r\n})\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  transform(html: string): any {\r\n    return this.sanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnChanges, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { GetNewsForApp } from '../../shared/interfaces/steam-news/get-news-for-app';\r\nimport { SteamNewsService } from '../../shared/services/steam-news.service';\r\n\r\n@Component({\r\n  selector: 'app-game-news',\r\n  templateUrl: './game-news.component.html',\r\n  styleUrls: ['./game-news.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class GameNewsComponent implements OnChanges {\r\n\r\n  @Input() nNews: number;\r\n  @Input() appid: number;\r\n\r\n  public gameNews: GetNewsForApp;\r\n\r\n  constructor(\r\n    private steamNews: SteamNewsService,\r\n  ) { }\r\n\r\n  ngOnChanges(): void {\r\n    if (this.appid) { this.getGameNews(); }\r\n  }\r\n\r\n  private async getGameNews(): Promise<void> {\r\n    this.gameNews = await this.steamNews.getNewsForApp(this.appid, 0, this.nNews);\r\n  }\r\n\r\n}\r\n","<div class=\"component-container\">\r\n    <div *ngIf=\"gameNews; else newsEmpty\">\r\n        <mat-card *ngFor=\"let news of gameNews.appnews.newsitems\" class=\"news-card\">\r\n            <mat-card-title class=\"title\">{{ news.title | uppercase}}</mat-card-title>\r\n            <mat-card-content class=\"card-content\">\r\n                <p class=\"author\"><span class=\"thin\">Author:</span>{{news.author}}</p>\r\n\r\n                <div *ngIf=\"news.tags\" class=\"tags\">\r\n                    <div>Tags: </div>\r\n                    <div *ngFor=\"let tag of news.tags\" class=\"tag\">{{tag}}</div>\r\n                </div>\r\n\r\n                <div [innerHTML]=\"news.contents | safeHtml\" class=\"content\">\r\n                </div>\r\n\r\n                <div class=\"footer\">\r\n                    <a href=\"{{news.url}}\" target=\"_blank\" class=\"link infoColor\">\r\n                        Follow the news <i class=\"fas fa-external-link-alt infoColor\"></i>\r\n                    </a>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n\r\n    <ng-template #newsEmpty>\r\n        <div>\r\n            <mat-card class=\"news-empty news-card\">\r\n                <p>We could not fetch any news for game right now.</p>\r\n            </mat-card>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n","import { Component, Input, OnChanges } from '@angular/core';\r\n\r\nimport { SteamAppsService } from '../../shared/services/steam-apps.service';\r\nimport { SteamUserStatsService } from '../../shared/services/steam-user-stats.service';\r\nimport { PlayerService } from '../../shared/services/player.service';\r\nimport { RecentlyPlayedGames } from '../../shared/interfaces/data/recently-played-games';\r\nimport { getGameData } from '../../shared/helpers/get-game-data';\r\n\r\n@Component({\r\n  selector: 'app-recent-games',\r\n  templateUrl: './recent-games.component.html',\r\n  styleUrls: ['./recent-games.component.scss']\r\n})\r\nexport class RecentGamesComponent implements OnChanges {\r\n\r\n  @Input() steamid: string;\r\n  @Input() nGames: number;\r\n\r\n  public games: RecentlyPlayedGames[];\r\n\r\n  constructor(\r\n    private steamUserStats: SteamUserStatsService,\r\n    private steamApps: SteamAppsService,\r\n    private player: PlayerService,\r\n  ) { }\r\n\r\n  ngOnChanges(): void {\r\n    this.getRecentlyPlayedGames(this.steamid, this.nGames);\r\n  }\r\n\r\n  private async getRecentlyPlayedGames(steamid: string, nGames: number): Promise<void> {\r\n    const { response } = await this.player.getRecentlyPlayedGames(steamid, nGames);\r\n\r\n    const { games } = response;\r\n\r\n    const recentGames: RecentlyPlayedGames[] = [];\r\n\r\n    if (response.total_count > 0) {\r\n      for (const game of games) {\r\n        const gameData = await getGameData(game.appid, this.steamUserStats, this.steamApps);\r\n\r\n        recentGames.push({\r\n          recentData: game,\r\n          data: gameData,\r\n        });\r\n      }\r\n    }\r\n\r\n    this.games = recentGames;\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"games\" class=\"component-container\">\r\n    <div *ngIf=\"games.length > 0; else gameEmpty\">\r\n        <mat-card *ngFor=\"let game of games\" class=\"game-card\">\r\n            <mat-card-content class=\"card-content\">\r\n                <div class=\"data\">\r\n                    <div class=\"game-image\">\r\n                        <img *ngIf=\"game.data.gameImage; else imageEmpty\" class=\"header-img\"\r\n                            src=\"{{game.data.gameImage}}\" alt=\"{{game.data.gameName}} header image\"\r\n                            title=\"{{game.data.gameName}}\">\r\n                        <ng-template #imageEmpty>\r\n                            <img class=\"header-img\" src=\"../../../assets/image-not-found.jpg\" alt=\"image not found\"\r\n                                title=\"image not found\">\r\n                        </ng-template>\r\n                    </div>\r\n\r\n                    <div class=\"game-desc\">\r\n                        <div class=\"desc-link\">\r\n                            <a href=\"https://store.steampowered.com/app/{{game.data.appid}}\" target=\"_blank\"\r\n                                class=\"link infoColor\">\r\n                                {{game.data.gameName}}\r\n                                <i class=\"fas fa-external-link-alt infoColor\"></i>\r\n                            </a>\r\n                            <a [routerLink]=\"['/game/', game.data.appid]\" class=\"link infoColor\">\r\n                                InfoSteam page\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"desc-players successColor\" title=\"Online users playing the game\">\r\n                            {{game.data.player_count}}\r\n                            <i class=\"fas fa-users successColor\"></i>\r\n                        </div>\r\n                        <div *ngIf=\"game.data.game.availableGameStats\" class=\"desc-achievements perfectColor\"\r\n                            title=\"Total game achievements\">\r\n                            {{game.data.game.availableGameStats.achievements.length}}\r\n                            <i class=\"fas fa-trophy perfectColor\"></i>\r\n                        </div>\r\n                        <div class=\"desc-time2Weeks successColor\" title=\"Hours played last 2 weeks\">\r\n                            + {{game.recentData.playtime_2weeks / 60 | shortDecimals }} h\r\n                            <i class=\"fas fa-calendar-week successColor\"></i>\r\n                            <p class=\"w-md successColor\">\r\n                                Last 2 weeks\r\n                            </p>\r\n                        </div>\r\n                        <div class=\"desc-timeForever successColor\" title=\"Total hours played\">\r\n                            {{game.recentData.playtime_forever / 60 | shortDecimals }} h\r\n                            <i class=\"fas fa-hourglass-half successColor\"></i>\r\n                            <p class=\"w-md successColor\">\r\n                                Total\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <ng-template #gameEmpty>\r\n        <mat-card class=\"game-empty game-card\">\r\n            <p>This user haven't play any game in two weeks.</p>\r\n        </mat-card>\r\n    </ng-template>\r\n</div>\r\n","export function notIdUserRegExp(str: string): string {\r\n  const nonDigitRegExp = /[^\\d]+/g;\r\n  if (str.match(nonDigitRegExp)) { return str.match(nonDigitRegExp)[0]; }\r\n  else { return ''; }\r\n}\r\n","import { PlayerService } from '../services/player.service';\r\nimport { SteamUserService } from '../services/steam-user.service';\r\nimport { UserData } from '../interfaces/data/user-data';\r\n\r\nexport async function getUserData(steamid: string, steamUser: SteamUserService, player: PlayerService): Promise<UserData> {\r\n  const { response: { players } } = await steamUser.getPlayerSummaries(steamid.toString());\r\n\r\n  const { response: { player_level } } = await player.getSteamLevel(steamid);\r\n\r\n  const { response: { game_count } } = await player.getOwnedGames(steamid, true, false);\r\n\r\n  const { friendslist: { friends } } = await steamUser.getFriendList(steamid);\r\n\r\n  let steamids = '';\r\n  for (const friend of friends) { steamids += `${friend.steamid},`; }\r\n\r\n  const { response } = await steamUser.getPlayerSummaries(steamids);\r\n\r\n  return {\r\n    player: { ...players }[0],\r\n    player_level,\r\n    game_count,\r\n    friends: response,\r\n  };\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  public title = 'InfoSteam';\r\n\r\n  constructor(\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-toolbar class=\"toolbar headerBgColor\">\r\n    <button mat-icon-button class=\"btnMenuIcon\" (click)=\"drawer.toggle()\">\r\n        <i class=\"fas fa-bars\"></i>\r\n    </button>\r\n    <div>\r\n        <div [routerLink]=\"['']\" class=\"btn title\">{{ title | uppercase }}</div>\r\n    </div>\r\n</mat-toolbar>\r\n\r\n<mat-drawer-container [hasBackdrop]=\"true\" class=\"drawer-container\">\r\n    <mat-drawer #drawer [mode]=\"'over'\" class=\"drawer sidenavBgColor\">\r\n        <mat-list role=\"list\">\r\n            <mat-list-item [routerLink]=\"['']\" role=\"navigation\" class=\"btn drawer-item\" (click)=\"drawer.toggle()\">\r\n                <i class=\"fas fa-search\"></i>\r\n                Home\r\n            </mat-list-item>\r\n            <mat-divider></mat-divider>\r\n            <mat-list-item [routerLink]=\"['news']\" role=\"navigation\" class=\"btn drawer-item\" (click)=\"drawer.toggle()\">\r\n                <i class=\"fas fa-newspaper\"></i>\r\n                Game news\r\n            </mat-list-item>\r\n            <mat-divider></mat-divider>\r\n            <mat-list-item [routerLink]=\"['help']\" role=\"navigation\" class=\"btn drawer-item\" (click)=\"drawer.toggle()\">\r\n                <i class=\"fas fa-info\"></i>\r\n                Help\r\n            </mat-list-item>\r\n            <mat-divider></mat-divider>\r\n        </mat-list>\r\n    </mat-drawer>\r\n\r\n    <mat-drawer-content>\r\n        <router-outlet></router-outlet>\r\n    </mat-drawer-content>\r\n</mat-drawer-container>\r\n","import { GetRecentlyPlayedGames } from '../interfaces/player/get-recently-played-games';\r\nimport { GetOwnedGames } from '../interfaces/player/get-owned-games';\r\nimport { GetSteamLevel } from '../interfaces/player/get-steam-level';\r\nimport { GetBadges } from '../interfaces/player/get-badges';\r\nimport { GetCommunityBadgeProgress } from '../interfaces/player/get-community-badge-progress';\r\nimport { IsPlayingSharedGame } from '../interfaces/player/is-playing-shared-game';\r\n\r\nexport abstract class AbstractPlayerService {\r\n\r\n  abstract getRecentlyPlayedGames(steamid: string, count?: number): Promise<GetRecentlyPlayedGames>;\r\n\r\n  abstract getOwnedGames(steamid: string, includeAppinfo: boolean, includePlayedFreeGames?: boolean, appidsFilter?: number): Promise<GetOwnedGames>;\r\n\r\n  abstract getSteamLevel(steamid: string): Promise<GetSteamLevel>;\r\n\r\n  abstract getBadges(steamid: string): Promise<GetBadges>;\r\n\r\n  abstract getCommunityBadgeProgress(steamid: string, badgeid: number): Promise<GetCommunityBadgeProgress>;\r\n\r\n  abstract isPlayingSharedGame(steamid: string, appidPlaying: number): Promise<IsPlayingSharedGame>;\r\n\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-game-search',\r\n  templateUrl: './game-search.component.html',\r\n  styleUrls: ['./game-search.component.scss']\r\n})\r\nexport class GameSearchComponent implements OnInit {\r\n\r\n  @Output() gameSearch = new EventEmitter<string>();\r\n\r\n  public form: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formInit();\r\n  }\r\n\r\n  private formInit(): void {\r\n    this.form = this.fb.group({ gameSearch: ['', Validators.pattern(/\\d+/g)] });\r\n  }\r\n\r\n  public onSendClick(): void {\r\n    if (this.form.valid) {\r\n      const gameSearch: string = this.form.get('gameSearch').value;\r\n\r\n      this.gameSearch.emit(gameSearch);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"component-container\">\r\n    <form [formGroup]=\"form\">\r\n        <mat-form-field appearance=\"standard\" class=\"searchBar\">\r\n            <mat-label>Game search</mat-label>\r\n            <input matInput formControlName=\"gameSearch\" placeholder=\"appid: 524220, 237930, ...\">\r\n            <button matSuffix mat-raised-button (click)=\"onSendClick()\">\r\n                <i class=\"fas fa-search\"></i>\r\n            </button>\r\n            <mat-error>Format for appid is numeric (524220, 237930, ...)</mat-error>\r\n            <mat-hint>Search a game.</mat-hint>\r\n        </mat-form-field>\r\n    </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { SteamAppsService } from '../../shared/services/steam-apps.service';\r\nimport { SteamUserStatsService } from '../../shared/services/steam-user-stats.service';\r\nimport { GameData } from '../../shared/interfaces/data/game-data';\r\nimport { getGameData } from '../../shared/helpers/get-game-data';\r\n\r\n@Component({\r\n  selector: 'app-game-detail',\r\n  templateUrl: './game-detail.component.html',\r\n  styleUrls: ['./game-detail.component.scss']\r\n})\r\nexport class GameDetailComponent implements OnInit {\r\n\r\n  public gameData: GameData;\r\n  public nNews: number;\r\n  public appid: number;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private steamUserStats: SteamUserStatsService,\r\n    private steamApps: SteamAppsService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.nNews = 3;\r\n    this.route.params\r\n      .subscribe(params => {\r\n        this.appid = parseInt(params.appid, 10);\r\n        this.getGameData(this.appid);\r\n      });\r\n  }\r\n\r\n  private async getGameData(appid: number): Promise<void> {\r\n    try {\r\n      this.gameData = await getGameData(appid, this.steamUserStats, this.steamApps);\r\n    } catch (error) {\r\n      console.error('Error while retrieving game data', error);\r\n      this.router.navigate(['Page_Not_Found']);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"page-container\">\r\n    <div *ngIf=\"gameData\" class=\"game\">\r\n        <h1>{{gameData.gameName | uppercase}}</h1>\r\n\r\n        <div class=\"data\">\r\n            <div class=\"image\">\r\n                <img *ngIf=\"gameData.gameImage; else imageEmpty\" class=\"header-img\" src=\"{{gameData.gameImage}}\"\r\n                    alt=\"{{gameData.gameName}} image\" title=\"{{gameData.gameName}}\">\r\n                <ng-template #imageEmpty>\r\n                    <img class=\"header-img\" src=\"../../../assets/image-not-found.jpg\" alt=\"image not found\"\r\n                        title=\"image not found\">\r\n                </ng-template>\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div>\r\n                    Steam appid {{gameData.appid}}\r\n                    <i class=\"fab fa-steam-symbol\"></i>\r\n                </div>\r\n\r\n                <div>\r\n                    Game ver. {{gameData.game.gameVersion}}\r\n                    <i class=\"fas fa-code-branch\"></i>\r\n                </div>\r\n\r\n                <div>\r\n                    <a href=\"https://store.steampowered.com/app/{{gameData.appid}}\" target=\"_blank\"\r\n                        class=\"link infoColor\">\r\n                        Steam store\r\n                        <i class=\"fas fa-external-link-alt infoColor\"></i>\r\n                    </a>\r\n                </div>\r\n\r\n                <div class=\"successColor\">\r\n                    Active players {{gameData.player_count}}\r\n                    <i class=\"fas fa-users successColor\"></i>\r\n                </div>\r\n\r\n                <div class=\"perfectColor\">\r\n                    Achievements {{gameData.game.availableGameStats.achievements.length}}\r\n                    <i class=\"fas fa-trophy perfectColor\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <app-game-news [appid]=\"appid\" [nNews]=\"nNews\"></app-game-news>\r\n    </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport * as config from '../../../config.json';\r\nimport { AbstractSteamAppsService } from '../abstract-services/abstract-steam-apps-service';\r\nimport { GetAppList } from '../interfaces/steam-apps/get-app-list';\r\nimport { GetServersAtAddress } from '../interfaces/steam-apps/get-servers-at-address';\r\nimport { UpToDateCheck } from '../interfaces/steam-apps/up-to-date-check';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SteamAppsService extends AbstractSteamAppsService {\r\n\r\n  private readonly INTERFACE = 'ISteamApps';\r\n\r\n  private appList: Promise<GetAppList> = null;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n    super();\r\n  }\r\n  /**\r\n   * Gets the complete list of public apps.\r\n   * @return IGetAppList => applist: { apps: [{ appid: number, name: string }] }\r\n   */\r\n  getAppList(): Promise<GetAppList> {\r\n    if (this.appList) {\r\n      return this.appList;\r\n    } else {\r\n      this.appList = this.http\r\n        .get<GetAppList>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetAppList/v2/`)\r\n        .toPromise();\r\n      return this.appList;\r\n    }\r\n\r\n  }\r\n  /**\r\n   * @param addr IP or IP:queryport to list\r\n   */\r\n  getServersAtAddress(addr: string): Promise<GetServersAtAddress> {\r\n    return this.http\r\n      .get<GetServersAtAddress>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetServersAtAddress/v1/?addr=${addr}`)\r\n      .toPromise();\r\n  }\r\n  /**\r\n   * @param appid AppID of game\r\n   * @param version The installed version of the game\r\n   */\r\n  upToDateCheck(appid: number, version: number): Promise<UpToDateCheck> {\r\n    return this.http\r\n      .get<UpToDateCheck>(`${config.STEAM_API_URL}/${this.INTERFACE}/UpToDateCheck/v1/?appid=${appid}&version=${version}`)\r\n      .toPromise();\r\n  }\r\n\r\n}\r\n","import { GetGlobalAchievementPercentagesForApp } from '../interfaces/steam-user-stats/get-global-achievement-percentages-for-app';\r\nimport { GetGlobalStatsForGame } from '../interfaces/steam-user-stats/get-global-stats-for-game';\r\nimport { GetNumberOfCurrentPlayers } from '../interfaces/steam-user-stats/get-number-of-current-players';\r\nimport { GetPlayerAchievements } from '../interfaces/steam-user-stats/get-player-achievements';\r\nimport { GetSchemaForGame } from '../interfaces/steam-user-stats/get-schema-for-game';\r\nimport { GetUserStatsForGame } from '../interfaces/steam-user-stats/get-user-stats-for-game';\r\n\r\nexport abstract class AbstractSteamUserStatsService {\r\n\r\n  abstract getGlobalAchievementPercentagesForApp(gameid: number): Promise<GetGlobalAchievementPercentagesForApp>;\r\n\r\n  abstract getGlobalStatsForGame(appid: number, count: number, statName: string, startdate?: number, enddate?: number): Promise<GetGlobalStatsForGame>;\r\n\r\n  abstract getNumberOfCurrentPlayers(appid: number): Promise<GetNumberOfCurrentPlayers>;\r\n\r\n  abstract getPlayerAchievements(steamid: string, appid: number, lang?: string): Promise<GetPlayerAchievements>;\r\n\r\n  abstract getSchemaForGame(appid: number, lang?: string): Promise<GetSchemaForGame>;\r\n\r\n  abstract getUserStatsForGame(steamid: string, appid: number): Promise<GetUserStatsForGame>;\r\n\r\n}\r\n","// Angular\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n// Modules\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { material } from './shared/modules/material';\r\n// Pages components\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { NewsComponent } from './pages/news/news.component';\r\nimport { GameDetailComponent } from './pages/game-detail/game-detail.component';\r\nimport { UserDetailComponent } from './pages/user-detail/user-detail.component';\r\nimport { HelpComponent } from './pages/help/help.component';\r\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\r\n// Components\r\nimport { AppComponent } from './app.component';\r\nimport { GameNewsComponent } from './components/game-news/game-news.component';\r\nimport { RecommendedGamesComponent } from './components/recommended-games/recommended-games.component';\r\nimport { GameSearchComponent } from './components/game-search/game-search.component';\r\nimport { UserSearchComponent } from './components/user-search/user-search.component';\r\nimport { RecentGamesComponent } from './components/recent-games/recent-games.component';\r\n// Pipes\r\nimport { SafeHtmlPipe } from './shared/pipes/safe-html.pipe';\r\nimport { ShortDecimalsPipe } from './shared/pipes/short-decimals.pipe';\r\nimport { ShowUTCTimePipe } from './shared/pipes/show-utc-time.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    RecommendedGamesComponent,\r\n    HelpComponent,\r\n    GameDetailComponent,\r\n    UserDetailComponent,\r\n    PageNotFoundComponent,\r\n    GameSearchComponent,\r\n    UserSearchComponent,\r\n    NewsComponent,\r\n    GameNewsComponent,\r\n    RecentGamesComponent,\r\n    SafeHtmlPipe,\r\n    ShortDecimalsPipe,\r\n    ShowUTCTimePipe,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ...material,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// Remove sample. from file name (✿◡‿◡) and type your STEAM API KEY here\nexport const key = 'YOUR-STEAM-API-KEY';\n\n/*\n  -- Sample for user --\n  personaname : Monorata2\n  steamid : 76561198094709860\n  customURL : http://steamcommunity.com/id/monorata2\n  profile : http://steamcommunity.com/profiles/76561198094709860\n\n  -- Samples for apps --\n  524220 : Nier: Automata,\n  237930 : Transistor,\n  312750 : Final Fantasy IV,\n  987720 : Oninaki\n*/\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'shortDecimals'\r\n})\r\nexport class ShortDecimalsPipe implements PipeTransform {\r\n\r\n  transform(num: number): any {\r\n    return num.toFixed(1);\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { key } from '../../../key';\r\nimport * as config from '../../../config.json';\r\nimport { AbstractPlayerService } from '../abstract-services/abstract-player-service';\r\nimport { GetBadges } from '../interfaces/player/get-badges';\r\nimport { GetCommunityBadgeProgress } from '../interfaces/player/get-community-badge-progress';\r\nimport { GetOwnedGames } from '../interfaces/player/get-owned-games';\r\nimport { GetRecentlyPlayedGames } from '../interfaces/player/get-recently-played-games';\r\nimport { GetSteamLevel } from '../interfaces/player/get-steam-level';\r\nimport { IsPlayingSharedGame } from '../interfaces/player/is-playing-shared-game';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayerService extends AbstractPlayerService {\r\n\r\n  private readonly INTERFACE = 'IPlayerService';\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n    super();\r\n  }\r\n  /**\r\n   * Gets information about a player's recently played games\r\n   * @param steamid The player we're asking about\r\n   * @param count The number of games to return (0/unset: all)\r\n   */\r\n  getRecentlyPlayedGames(steamid: string, count?: number): Promise<GetRecentlyPlayedGames> {\r\n    let urlParams = '';\r\n    if (count) { urlParams += `&count=${count}`; }\r\n\r\n    return this.http\r\n      .get<GetRecentlyPlayedGames>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetRecentlyPlayedGames/v1/?key=${key}&steamid=${steamid}${urlParams}`)\r\n      .toPromise();\r\n  }\r\n  /**\r\n   * Return a list of games owned by the player\r\n   * @param steamid The player we're asking about\r\n   * @param includeAppinfo true if we want additional details (name, icon) about each game\r\n   * @param includePlayedFreeGames Free games are excluded by default. If this is set, free games the user has played will be returned.\r\n   * @param appidsFilter if set, restricts result set to the passed in apps\r\n   */\r\n  getOwnedGames(steamid: string, includeAppinfo: boolean, includePlayedFreeGames?: boolean, appidsFilter?: number): Promise<GetOwnedGames> {\r\n    let urlParams = '';\r\n    if (includePlayedFreeGames !== undefined) { urlParams += `&include_played_free_games=${includePlayedFreeGames}`; }\r\n    if (appidsFilter) { urlParams += `&appids_filter=${appidsFilter}`; }\r\n\r\n    return this.http\r\n      .get<GetOwnedGames>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetOwnedGames/v1/?key=${key}&steamid=${steamid}&include_appinfo=${includeAppinfo}${urlParams}`)\r\n      .toPromise();\r\n  }\r\n  /**\r\n   * Returns the Steam Level of a user\r\n   * @param steamid The player we're asking about\r\n   */\r\n  getSteamLevel(steamid: string): Promise<GetSteamLevel> {\r\n    return this.http\r\n      .get<GetSteamLevel>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetSteamLevel/v1/?key=${key}&steamid=${steamid}`)\r\n      .toPromise();\r\n  }\r\n  /**\r\n   * Gets badges that are owned by a specific user\r\n   * @param steamid The player we're asking about\r\n   */\r\n  getBadges(steamid: string): Promise<GetBadges> {\r\n    return this.http\r\n      .get<GetBadges>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetBadges/v1/?key=${key}&steamid=${steamid}`)\r\n      .toPromise();\r\n  }\r\n  /**\r\n   * Gets all the quests needed to get the specified badge, and which are completed\r\n   * @param steamid The player we're asking about\r\n   * @param badgeid The badge we're asking about\r\n   */\r\n  getCommunityBadgeProgress(steamid: string, badgeid: number): Promise<GetCommunityBadgeProgress> {\r\n    return this.http\r\n      .get<GetCommunityBadgeProgress>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetCommunityBadgeProgress/v1/?key=${key}&steamid=${steamid}&badgeid=${badgeid}`)\r\n      .toPromise();\r\n  }\r\n  /**\r\n   * Returns valid lender SteamID if game currently played is borrowed\r\n   * @param steamid The player we're asking about\r\n   * @param appidPlaying The game player is currently playing\r\n   */\r\n  isPlayingSharedGame(steamid: string, appidPlaying: number): Promise<IsPlayingSharedGame> {\r\n    return this.http\r\n      .get<IsPlayingSharedGame>(`${config.STEAM_API_URL}/${this.INTERFACE}/IsPlayingSharedGame/v1/?key=${key}&steamid=${steamid}&appid_playing=${appidPlaying}`)\r\n      .toPromise();\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-user-search',\r\n  templateUrl: './user-search.component.html',\r\n  styleUrls: ['./user-search.component.scss']\r\n})\r\nexport class UserSearchComponent implements OnInit {\r\n\r\n  @Output() userSearch = new EventEmitter<string>();\r\n\r\n  public form: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formInit();\r\n  }\r\n\r\n  private formInit(): void {\r\n    this.form = this.fb.group({ userSearch: [''] });\r\n  }\r\n\r\n  public onSendClick(): void {\r\n    if (this.form.valid) {\r\n      const userSearch: string = this.form.get('userSearch').value;\r\n\r\n      this.userSearch.emit(userSearch);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"component-container\">\r\n    <form [formGroup]=\"form\">\r\n        <mat-form-field appearance=\"standard\" class=\"searchBar\">\r\n            <mat-label>User search</mat-label>\r\n            <input matInput formControlName=\"userSearch\" placeholder=\"steamid\">\r\n            <button matSuffix mat-raised-button (click)=\"onSendClick()\">\r\n                <i class=\"fas fa-search\"></i>\r\n            </button>\r\n            <mat-error>Format for steamid is numeric.</mat-error>\r\n            <mat-hint>Search a user.</mat-hint>\r\n        </mat-form-field>\r\n    </form>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { key } from '../../../key';\r\nimport * as config from '../../../config.json';\r\nimport { AbstractSteamUserStatsService } from '../abstract-services/abstract-steam-user-stats-service';\r\nimport { GetGlobalAchievementPercentagesForApp } from '../interfaces/steam-user-stats/get-global-achievement-percentages-for-app';\r\nimport { GetGlobalStatsForGame } from '../interfaces/steam-user-stats/get-global-stats-for-game';\r\nimport { GetNumberOfCurrentPlayers } from '../interfaces/steam-user-stats/get-number-of-current-players';\r\nimport { GetPlayerAchievements } from '../interfaces/steam-user-stats/get-player-achievements';\r\nimport { GetSchemaForGame } from '../interfaces/steam-user-stats/get-schema-for-game';\r\nimport { GetUserStatsForGame } from '../interfaces/steam-user-stats/get-user-stats-for-game';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SteamUserStatsService extends AbstractSteamUserStatsService {\r\n\r\n  private readonly INTERFACE = 'ISteamUserStats';\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n    super();\r\n  }\r\n  /**\r\n   * Retrieves the global achievement percentages for the specified app.\r\n   * @param gameid GameID to retrieve the achievement percentages for\r\n   */\r\n  getGlobalAchievementPercentagesForApp(gameid: number): Promise<GetGlobalAchievementPercentagesForApp> {\r\n    return this.http\r\n      .get<GetGlobalAchievementPercentagesForApp>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetGlobalAchievementPercentagesForApp/v2/?gameid=${gameid}`)\r\n      .toPromise();\r\n  }\r\n  /**\r\n   * Retrieves the global stats percentages for the specified app.\r\n   * @param appid AppID that we're getting global stats for\r\n   * @param count Number of stats get data for\r\n   * @param statName Names of stat to get data for\r\n   * @param startdate Start date for daily totals (unix epoch timestamp)\r\n   * @param enddate End date for daily totals (unix epoch timestamp)\r\n   */\r\n  getGlobalStatsForGame(appid: number, count: number, statName: string, startdate?: number, enddate?: number): Promise<GetGlobalStatsForGame> {\r\n    let urlParams = '';\r\n    if (startdate) { urlParams += `&startdate=${startdate}`; }\r\n    if (enddate) { urlParams += `&enddate=${enddate}`; }\r\n\r\n    return this.http\r\n      .get<GetGlobalStatsForGame>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetGlobalStatsForGame/v1/?appid=${appid}&count=${count}&name[0]=${statName}${urlParams}`)\r\n      .toPromise();\r\n  }\r\n  /**\r\n   * Gets the total number of players currently active in the specified app on Steam.\r\n   * @param appid AppID that we're getting user count for\r\n   */\r\n  getNumberOfCurrentPlayers(appid: number): Promise<GetNumberOfCurrentPlayers> {\r\n    return this.http\r\n      .get<GetNumberOfCurrentPlayers>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetNumberOfCurrentPlayers/v1/?appid=${appid}`)\r\n      .toPromise();\r\n  }\r\n  /**\r\n   * Gets the list of achievements the specified user has unlocked in an app.\r\n   * @param steamid SteamID of user\r\n   * @param appid AppID to get achievements for\r\n   * @param lang Language to return strings for\r\n   */\r\n  getPlayerAchievements(steamid: string, appid: number, lang?: string): Promise<GetPlayerAchievements> {\r\n    let urlParams = '';\r\n    if (lang) { urlParams += `&l=${lang}`; }\r\n\r\n    return this.http\r\n      .get<GetPlayerAchievements>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetPlayerAchievements/v1/?key=${key}&steamid=${steamid}&appid=${appid}${urlParams}`)\r\n      .toPromise();\r\n  }\r\n  /**\r\n   * Gets the complete list of stats and achievements for the specified game.\r\n   * @param appid appid of game\r\n   * @param lang localized language to return (english, french, etc.)\r\n   */\r\n  getSchemaForGame(appid: number, lang?: string): Promise<GetSchemaForGame> {\r\n    let urlParams = '';\r\n    if (lang) { urlParams += `&l=${lang}`; }\r\n\r\n    return this.http\r\n      .get<GetSchemaForGame>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetSchemaForGame/v2/?key=${key}&appid=${appid}${urlParams}`)\r\n      .toPromise();\r\n  }\r\n  /**\r\n   * Gets the list of stats that the specified user has set in an app.\r\n   * @param steamid SteamID of user\r\n   * @param appid appid of game\r\n   */\r\n  getUserStatsForGame(steamid: string, appid: number): Promise<GetUserStatsForGame> {\r\n    return this.http\r\n      .get<GetUserStatsForGame>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetUserStatsForGame/v2/?key=${key}&steamid=${steamid}&appid=${appid}`)\r\n      .toPromise();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-help',\r\n  templateUrl: './help.component.html',\r\n  styleUrls: ['./help.component.scss']\r\n})\r\nexport class HelpComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"page-container\">\r\n    <section>\r\n        <span class=\"perfectColor\">CONTACT</span>\r\n        <br>\r\n        <i class=\"fab fa-github infoColor\"></i>\r\n        <a href=\"https://github.com/KoreanJuice/InfoSteam\" target=\"_blank\" class=\"link infoColor\">\r\n            GitHub repository\r\n        </a>\r\n        <br>\r\n        <i class=\"fas fa-envelope infoColor\"></i>\r\n        <a href=\"mailto:mmartinezb98@gmail.com\" class=\"link infoColor\">\r\n            mmartinezb98@gmail.com\r\n        </a>\r\n        <br>\r\n        <i class=\"fas fa-user\"></i>\r\n        Marcos Martínez Blázquez\r\n        <br>\r\n        <i class=\"fas fa-map-marker-alt\"></i>\r\n        Logroño, La Rioja, Spain\r\n        <br>\r\n        <i class=\"fab fa-twitter infoColor\"></i>\r\n        <a href=\"https://twitter.com/Monoratilla\" target=\"_blank\" class=\"link infoColor\">Monoratilla</a>\r\n        <mat-divider></mat-divider>\r\n\r\n        <span class=\"perfectColor\">RESOURCES</span>\r\n        <br>\r\n        <i class=\"fab fa-steam infoColor\"></i>\r\n        <a href=\"https://store.steampowered.com/\" target=\"_blank\" class=\"link infoColor\">\r\n            Powered by Steam\r\n        </a>\r\n        <br>\r\n        <i class=\"fab fa-font-awesome-flag infoColor\"></i>\r\n        <a href=\"https://fontawesome.com/\" target=\"_blank\" class=\"link infoColor\">\r\n            Powered by Font Awesome\r\n        </a>\r\n        <br>\r\n        <i class=\"fas fa-font infoColor\"></i>\r\n        <a href=\"https://fonts.google.com/specimen/Roboto\" target=\"_blank\" class=\"link infoColor\">Roboto font by\r\n            Christian Robertson\r\n        </a>\r\n        <mat-divider></mat-divider>\r\n    </section>\r\n    <section>\r\n        <span class=\"perfectColor\">APPLICATION INFO</span>\r\n        <br>\r\n        For now this application has no backend, neither DB to store any information. We work directly from Steam API\r\n        and CORS policy is strict in these cases, you will need a browser extension to work with InfoSteam.\r\n        <br>\r\n        <i class=\"fab fa-chrome infoColor\"></i>\r\n        <a href=\"https://chrome.google.com/webstore/detail/allow-cors-access-control/lhobafahddgcelffkeicbaginigeejlf\"\r\n            target=\"_blank\" class=\"link infoColor\">\r\n            Allow CORS extension for Chrome\r\n        </a>\r\n        <br>\r\n        <i class=\"fab fa-firefox infoColor\"></i>\r\n        <a href=\"https://addons.mozilla.org/en-US/firefox/addon/cors-everywhere/\" target=\"_blank\"\r\n            class=\"link infoColor\">\r\n            Allow CORS extension for Firefox\r\n        </a>\r\n        <mat-divider></mat-divider>\r\n\r\n        <span class=\"perfectColor\">CHANGE LOG</span> - 1.0.0 Ver.\r\n        <br>\r\n        <span class=\"highlighted successColor\">Lastest changes:</span>\r\n        <br>\r\n        Release the first version of the app. (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧\r\n        <br>\r\n        <span class=\"highlighted successColor\">Incoming features:</span>\r\n        <br>\r\n        <ul>\r\n            <li>A funtional backend / DB so you don't have to download any browser extension. ❤</li>\r\n            <li>Fastest load times.</li>\r\n            <li>Sign in with your Steam account.</li>\r\n            <li>Page redesign.</li>\r\n            <li>Code formatter for those who download the project.</li>\r\n        </ul>\r\n\r\n    </section>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'showUTCTime'\r\n})\r\nexport class ShowUTCTimePipe implements PipeTransform {\r\n  // Sun, 16 Jun 2013 14:58:40 GMT\r\n  transform(utcTimeString: string): any {\r\n    const regex = /([\\d]){2} ([A-z]){3} ([\\d]){4}/g;\r\n\r\n    return utcTimeString.match(regex);\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { key } from '../../../key';\r\nimport * as config from '../../../config.json';\r\nimport { AbstractSteamUserService } from '../abstract-services/abstract-steam-user-service';\r\nimport { GetFriendList } from '../interfaces/steam-user/get-friend-list';\r\nimport { GetPlayerBans } from '../interfaces/steam-user/get-player-bans';\r\nimport { GetPlayerSummaries } from '../interfaces/steam-user/get-player-summaries';\r\nimport { GetUserGroupList } from '../interfaces/steam-user/get-user-group-list';\r\nimport { ResolveVanityUrl } from '../interfaces/steam-user/resolve-vanity-url';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SteamUserService extends AbstractSteamUserService {\r\n\r\n  private readonly INTERFACE = 'ISteamUser';\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n    super();\r\n  }\r\n  /**\r\n   * Return a list of friends of a specific user\r\n   * @param steamid SteamID of user\r\n   * @param relationship relationship type (ex: friend)\r\n   */\r\n  getFriendList(steamid: string, relationship?: string): Promise<GetFriendList> {\r\n    let urlParams = '';\r\n    if (relationship) { urlParams += `&relationship=${relationship}`; }\r\n\r\n    return this.http\r\n      .get<GetFriendList>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetFriendList/v1/?key=${key}&steamid=${steamid}${urlParams}`)\r\n      .toPromise();\r\n  }\r\n  /**\r\n   * @param steamids Comma-delimited list of SteamIDs\r\n   */\r\n  getPlayerBans(steamids: string): Promise<GetPlayerBans> {\r\n    return this.http\r\n      .get<GetPlayerBans>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetPlayerBans/v1/?key=${key}&steamids=${steamids}`)\r\n      .toPromise();\r\n  }\r\n  /**\r\n   * Return a list with the major data of the users\r\n   * @param steamids Comma-delimited list of SteamIDs (max: 100)\r\n   */\r\n  getPlayerSummaries(steamids: string): Promise<GetPlayerSummaries> {\r\n    return this.http\r\n      .get<GetPlayerSummaries>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetPlayerSummaries/v2/?key=${key}&steamids=${steamids}`)\r\n      .toPromise();\r\n  }\r\n  /**\r\n   * Return a list of group ids which user has subscribed\r\n   * @param steamid SteamID of user\r\n   */\r\n  getUserGroupList(steamid: string): Promise<GetUserGroupList> {\r\n    return this.http\r\n      .get<GetUserGroupList>(`${config.STEAM_API_URL}/${this.INTERFACE}/GetUserGroupList/v1/?key=${key}&steamid=${steamid}`)\r\n      .toPromise();\r\n  }\r\n  /**\r\n   * Return steamid of a user, group or game group\r\n   * @param vanityUrl The vanity URL to get a SteamID for\r\n   * @param urlType The type of vanity URL. 1 (default): Individual profile, 2: Group, 3: Official game group\r\n   */\r\n  resolveVanityURL(vanityUrl: string, urlType?: number): Promise<ResolveVanityUrl> {\r\n    let urlParams = '';\r\n    if (urlType) { urlParams += `&url_type=${urlType}`; }\r\n\r\n    return this.http\r\n      .get<ResolveVanityUrl>(`${config.STEAM_API_URL}/${this.INTERFACE}/ResolveVanityURL/v1/?key=${key}&vanityurl=${vanityUrl}${urlParams}`)\r\n      .toPromise();\r\n  }\r\n\r\n}\r\n","export async function headerImgUrl(appid: number): Promise<string> {\r\n  return `https://cdn.cloudflare.steamstatic.com/steam/apps/${appid}/header.jpg`;\r\n}\r\n","import { SteamAppsService } from '../services/steam-apps.service';\r\nimport { SteamUserStatsService } from '../services/steam-user-stats.service';\r\nimport { GameData } from '../interfaces/data/game-data';\r\nimport { headerImgUrl } from './header-img-url';\r\n\r\nexport async function getGameData(appid: number, steamUserStats: SteamUserStatsService, steamApps: SteamAppsService): Promise<GameData> {\r\n  const { applist: { apps } } = await steamApps.getAppList();\r\n\r\n  const { name } = apps.find((app) => app.appid === appid);\r\n\r\n  const { game } = await steamUserStats.getSchemaForGame(appid);\r\n\r\n  const { response: { player_count } } = await steamUserStats.getNumberOfCurrentPlayers(appid);\r\n\r\n  const gameImage = await headerImgUrl(appid);\r\n\r\n  return {\r\n    game,\r\n    appid,\r\n    gameName: name,\r\n    gameImage,\r\n    player_count,\r\n  };\r\n\r\n}\r\n","// Angular\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n// Pages components\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { NewsComponent } from './pages/news/news.component';\r\nimport { GameDetailComponent } from './pages/game-detail/game-detail.component';\r\nimport { UserDetailComponent } from './pages/user-detail/user-detail.component';\r\nimport { HelpComponent } from './pages/help/help.component';\r\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: 'news',\r\n    component: NewsComponent,\r\n  },\r\n  {\r\n    path: 'user/:steamid',\r\n    component: UserDetailComponent,\r\n  },\r\n  {\r\n    path: 'game/:appid',\r\n    component: GameDetailComponent,\r\n  },\r\n  {\r\n    path: 'help',\r\n    component: HelpComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: PageNotFoundComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { SteamUserService } from '../../shared/services/steam-user.service';\r\nimport { PlayerService } from '../../shared/services/player.service';\r\nimport { UserData } from '../../shared/interfaces/data/user-data';\r\nimport { getUserData } from '../../shared/helpers/get-user-data';\r\n\r\n@Component({\r\n  selector: 'app-user-detail',\r\n  templateUrl: './user-detail.component.html',\r\n  styleUrls: ['./user-detail.component.scss']\r\n})\r\nexport class UserDetailComponent implements OnInit {\r\n\r\n  public userData: UserData;\r\n  public nGames: number;\r\n  public steamid: string;\r\n  public creationDate: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private steamUser: SteamUserService,\r\n    private player: PlayerService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.nGames = 3;\r\n    this.route.params\r\n      .subscribe(params => {\r\n        this.steamid = params.steamid;\r\n        this.getUserData(this.steamid);\r\n      });\r\n  }\r\n\r\n  private async getUserData(steamid: string): Promise<void> {\r\n    try {\r\n      this.userData = await getUserData(steamid, this.steamUser, this.player);\r\n      this.creationDate = new Date(this.userData.player.timecreated * 1000).toUTCString();\r\n    } catch (error) {\r\n      console.error('Error while retrieving user data', error);\r\n      this.router.navigate(['Page_Not_Found']);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"page-container\">\r\n    <div *ngIf=\"userData\" class=\"user\">\r\n\r\n        <div class=\"data\">\r\n            <div class=\"image\">\r\n                <img src=\"{{userData.player.avatarmedium}}\" alt=\"{{userData.player.personaname}} steam profile picture\"\r\n                    class=\"avatarmedium\">\r\n                <img src=\"{{userData.player.avatarfull}}\" alt=\"{{userData.player.personaname}} steam profile picture\"\r\n                    class=\"avatarfull\">\r\n            </div>\r\n\r\n            <div class=\"info\">\r\n                <div class=\"main\">\r\n                    <span>{{userData.player.personaname | titlecase}}</span>\r\n                    <span>{{userData.player.loccountrycode}}</span>\r\n                    <span *ngIf=\"userData.player.personastate === 1; else userOffline\"\r\n                        class=\"state successColor\">Online</span>\r\n                    <ng-template #userOffline>\r\n                        <span class=\"state errorColor\">Offline</span>\r\n                    </ng-template>\r\n                </div>\r\n                <div>\r\n                    Steam ID - {{userData.player.steamid}}\r\n                    <i class=\"fab fa-steam-symbol\"></i>\r\n                </div>\r\n                <div>\r\n                    <a href=\"{{userData.player.profileurl}}\" target=\"_blank\" class=\"link infoColor\">\r\n                        Steam profile\r\n                        <i class=\"fas fa-external-link-alt infoColor\"></i>\r\n                    </a>\r\n                </div>\r\n                <div class=\"perfectColor\">\r\n                    Level {{userData.player_level}}\r\n                    <i class=\"fab fa-ethereum perfectColor\"></i>\r\n                </div>\r\n                <div class=\"successColor\">\r\n                    Owned Games {{userData.game_count}}\r\n                    <i class=\"fas fa-gamepad successColor\"></i>\r\n                </div>\r\n                <div>\r\n                    Account created - {{creationDate | showUTCTime}}\r\n                    <i class=\"fas fa-calendar-alt\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <mat-card class=\"friends-card\">\r\n            <mat-card-content>\r\n                <div *ngFor=\"let friend of userData.friends.players\" class=\"friend extraBgColor\">\r\n                    <div class=\"friend-image\">\r\n                        <img src=\"{{friend.avatar}}\" alt=\"{{friend.personaname}} avatar\">\r\n                    </div>\r\n                    <div class=\"friend-name\">{{friend.personaname}}</div>\r\n                    <div class=\"friend-url infoColor\">\r\n                        <a href=\"{{friend.profileurl}}\" target=\"_blank\" class=\"link infoColor\">\r\n                            Profile\r\n                            <i class=\"fas fa-external-link-alt infoColor\"></i>\r\n                        </a>\r\n                    </div>\r\n                    <div class=\"friend-innerUrl infoColor\">\r\n                        <a [routerLink]=\"['/user/', friend.steamid]\" class=\"link infoColor\">InfoSteam</a>\r\n                    </div>\r\n                    <div class=\"friend-state\">\r\n                        <span *ngIf=\"friend.personastate === 1; else userOffline\" class=\"successColor\">Online</span>\r\n                        <ng-template #userOffline>\r\n                            <span class=\"errorColor\">Offline</span>\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n\r\n        <app-recent-games [steamid]=\"steamid\" [nGames]=\"nGames\"></app-recent-games>\r\n    </div>\r\n</div>\r\n","import { GetAppList } from '../interfaces/steam-apps/get-app-list';\r\nimport { GetServersAtAddress } from '../interfaces/steam-apps/get-servers-at-address';\r\nimport { UpToDateCheck } from '../interfaces/steam-apps/up-to-date-check';\r\n\r\nexport abstract class AbstractSteamAppsService {\r\n\r\n  abstract getAppList(): Promise<GetAppList>;\r\n\r\n  abstract getServersAtAddress(addr: string): Promise<GetServersAtAddress>;\r\n\r\n  abstract upToDateCheck(appid: number, version: number): Promise<UpToDateCheck>;\r\n\r\n}\r\n","import { GetFriendList } from '../interfaces/steam-user/get-friend-list';\r\nimport { GetPlayerBans } from '../interfaces/steam-user/get-player-bans';\r\nimport { GetPlayerSummaries } from '../interfaces/steam-user/get-player-summaries';\r\nimport { GetUserGroupList } from '../interfaces/steam-user/get-user-group-list';\r\nimport { ResolveVanityUrl } from '../interfaces/steam-user/resolve-vanity-url';\r\n\r\nexport abstract class AbstractSteamUserService {\r\n\r\n  abstract getFriendList(steamid: string, relationship?: string): Promise<GetFriendList>;\r\n\r\n  abstract getPlayerBans(steamids: string): Promise<GetPlayerBans>;\r\n\r\n  abstract getPlayerSummaries(steamids: string): Promise<GetPlayerSummaries>;\r\n\r\n  abstract getUserGroupList(steamid: string): Promise<GetUserGroupList>;\r\n\r\n  abstract resolveVanityURL(vanityurl: string, urlType?: number): Promise<ResolveVanityUrl>;\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}